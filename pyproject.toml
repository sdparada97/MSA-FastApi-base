[tool.poetry]
name = "msa-fastapi-base"
version = "0.1.0"
description = "Template to create MSA with FastAPI"
authors = ["sdparada97 <sdparada97@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.black]
skip-string-normalization = true
line-length = 120

[tool.ruff]
# Same as Black.
line-length = 120
exclude = ["migrations/*","versions/*"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors (settings from FastAPI, thanks, @tiangolo!)
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]

[tool.ruff.lint.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = []


[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.110.1"
uvicorn = "^0.29.0"
sqlalchemy = "^2.0.29"
asyncpg = "^0.29.0"
python-dotenv = "^1.0.1"
alembic = "^1.13.1"
loguru = "^0.7.2"
sqlmodel = "^0.0.16"
psycopg2-binary = "^2.9.9"
sqlalchemy-utils = "^0.41.2"


[tool.poetry.group.dev.dependencies]
black = "^24.4.0"
pytest = "^8.1.1"
pytest-asyncio = "^0.23.6"
httpx = "^0.27.0"
ruff = "^0.4.1"
pre-commit = "^3.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
